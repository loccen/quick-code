# 速码网后端服务配置文件
server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  application:
    name: quick-code-backend

  profiles:
    active: dev

  # 数据源配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST:mysql}:${DB_PORT:3306}/${DB_NAME:quick_code}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true
    username: ${DB_USERNAME:quick_code_user}
    password: ${DB_PASSWORD:quick_code_pass}
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      auto-commit: true
      idle-timeout: 30000
      pool-name: QuickCodeHikariCP
      max-lifetime: 1800000
      connection-timeout: 30000
      connection-test-query: SELECT 1

  # JPA配置
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: ${DEBUG_SQL:true}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

  # Redis配置
  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:redis_pass}
      database: ${REDIS_DATABASE:0}
      timeout: 5000ms
      lettuce:
        pool:
          max-active: 20
          max-wait: -1ms
          max-idle: 10
          min-idle: 5

  # 文件上传配置
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
      enabled: true

  # 缓存配置
  cache:
    type: redis
    redis:
      time-to-live: 3600000
      cache-null-values: false

  # 安全配置
  security:
    user:
      name: admin
      password: admin123

# MyBatis Plus配置
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      id-type: auto
      logic-delete-field: deleted
      logic-delete-value: 1
      logic-not-delete-value: 0
  mapper-locations: classpath*:mapper/**/*Mapper.xml

# 应用自定义配置
app:
  name: ${APP_NAME:速码网}
  version: ${APP_VERSION:1.0.0}
  description: ${APP_DESCRIPTION:专业的源码交易平台}
  base-url: ${APP_BASE_URL:http://localhost:8080}
  frontend-url: ${APP_FRONTEND_URL:http://localhost:3000}
  admin-url: ${APP_ADMIN_URL:http://localhost:3001}

  # JWT配置
  jwt:
    secret: ${JWT_SECRET:dev-jwt-secret-key-change-in-production}
    expiration: ${JWT_EXPIRE_HOURS:24}
    refresh-expiration: ${JWT_REFRESH_EXPIRE_DAYS:7}

  # 文件存储配置
  file:
    upload-path: ${UPLOAD_PATH:./uploads}
    max-size: ${MAX_FILE_SIZE:100MB}
    allowed-types: ${ALLOWED_FILE_TYPES:.zip,.rar,.tar.gz,.7z}

  # MinIO配置
  minio:
    endpoint: ${MINIO_ENDPOINT:http://minio:9000}
    access-key: ${MINIO_ACCESS_KEY:minioadmin}
    secret-key: ${MINIO_SECRET_KEY:minioadmin123}
    bucket: ${MINIO_BUCKET:quick-code-files}
    region: ${MINIO_REGION:us-east-1}

  # 业务配置
  business:
    point:
      register-reward: ${POINT_REGISTER_REWARD:100}
      upload-reward: ${POINT_UPLOAD_REWARD:100}
      docker-bonus: ${POINT_DOCKER_BONUS:100}
      platform-rate: ${POINT_PLATFORM_RATE:0.3}

    # 邮箱验证配置
    email:
      verification-code: ${EMAIL_VERIFICATION_CODE:123456}
      verification-expire-minutes: ${EMAIL_VERIFICATION_EXPIRE_MINUTES:30}
      password-reset-code: ${PASSWORD_RESET_CODE:888888}
      password-reset-expire-minutes: ${PASSWORD_RESET_EXPIRE_MINUTES:15}

    review:
      auto-approve: ${AUTO_APPROVE_PROJECTS:false}
      timeout-hours: ${REVIEW_TIMEOUT_HOURS:72}

    deploy:
      demo-expire-hours: ${DEPLOY_DEMO_EXPIRE_HOURS:24}
      max-instances: ${DEPLOY_MAX_INSTANCES:10}
      domain-prefix: ${DEPLOY_DOMAIN_PREFIX:demo}
      base-domain: ${DEPLOY_BASE_DOMAIN:quickcode.local}

# 监控配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# 日志配置 - 详细配置见logback-spring.xml
logging:
  file:
    name: logs/quick-code.log

# SpringDoc配置
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  packages-to-scan: com.quickcode.controller
